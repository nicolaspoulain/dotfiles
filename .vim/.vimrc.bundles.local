    let g:override_spf13_bundles = 1
    let g:spf13_bundle_groups=['general', 'neocomplcache', 'programming', 'php', 'python', 'javascript', 'haskell', 'html', 'misc']

    " General {
        if count(g:spf13_bundle_groups, 'general')
            "Bundle 'scrooloose/nerdtree'
            "Bundle 'altercation/vim-colors-solarized'
            "Bundle 'spf13/vim-colors'
            Bundle 'tpope/vim-surround'
            "Bundle 'kien/ctrlp.vim'
                " Ctrl-n magique !!!!!!!
            Bundle 'terryma/vim-multiple-cursors'
            Bundle 'vim-scripts/sessionman.vim'
            Bundle 'matchit.zip'
            if (has("python") || has("python3")) && exists('g:spf13_use_powerline') && !exists('g:spf13_use_old_powerline')
                Bundle 'Lokaltog/powerline', {'rtp':'/powerline/bindings/vim'}
            elseif exists('g:spf13_use_powerline') && exists('g:spf13_use_old_powerline')
                Bundle 'Lokaltog/vim-powerline'
            else
                Bundle 'bling/vim-airline'
            endif
            Bundle 'bling/vim-bufferline'
            Bundle 'Lokaltog/vim-easymotion'
            "Bundle 'godlygeek/csapprox'
            "Bundle 'jistr/vim-nerdtree-tabs'
            ""Bundle 'flazz/vim-colorschemes'
            "Bundle 'mbbill/undotree'
            "Bundle 'myusuf3/numbers.vim'
            "Bundle 'nathanaelkane/vim-indent-guides'
            if !exists('g:spf13_no_views')
                Bundle 'vim-scripts/restore_view.vim'
            endif
            "Bundle 'mhinz/vim-signify'
            "Bundle 'tpope/vim-abolish.git'
            ""Bundle 'osyo-manga/vim-over'
            "Bundle 'justinmk/vim-sneak'
        endif
    " }

    " General Programming {
        if count(g:spf13_bundle_groups, 'programming')
            " Pick one of the checksyntax, jslint, or syntastic
            Bundle 'scrooloose/syntastic'
            Bundle 'tpope/vim-fugitive'
            "Bundle 'mattn/webapi-vim'
            "Bundle 'mattn/gist-vim'
            Bundle 'scrooloose/nerdcommenter'
            Bundle 'godlygeek/tabular'
            if executable('ctags')
                Bundle 'majutsushi/tagbar'
            endif
        endif
    " }

    " Snippets & AutoComplete {
        if count(g:spf13_bundle_groups, 'neocomplcache')
            Bundle 'Shougo/neocomplcache'
            Bundle 'Shougo/neosnippet'
            Bundle 'honza/vim-snippets'
        endif
    " }

    " PHP {
        if count(g:spf13_bundle_groups, 'php')
            "Bundle 'spf13/PIV'
            "Bundle 'arnaud-lb/vim-php-namespace'
        endif
    " }

    " Javascript {
        if count(g:spf13_bundle_groups, 'javascript')
            Bundle 'elzr/vim-json'
            Bundle 'groenewege/vim-less'
            Bundle 'pangloss/vim-javascript'
            Bundle 'briancollins/vim-jst'
            Bundle 'kchmck/vim-coffee-script'
        endif
    " }

    " HTML {
        if count(g:spf13_bundle_groups, 'html')
            Bundle 'spf13/vim-autoclose'
            Bundle 'amirh/HTML-AutoCloseTag'
            Bundle 'hail2u/vim-css3-syntax'
            Bundle 'tpope/vim-haml'
        endif
    " }


    " Misc {
        if count(g:spf13_bundle_groups, 'misc')
            "Bundle 'tpope/vim-markdown'
            Bundle 'vim-pandoc/vim-pandoc'
            "Bundle 'spf13/vim-preview'
            Bundle 'tpope/vim-cucumber'
            Bundle 'atweiden/vim-dragvisuals'
            "Bundle 'quentindecock/vim-cucumber-align-pipes'
            "Bundle 'Puppet-Syntax-Highlighting'
        endif
    " }


